// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: google/ads/googleads/v18/services/shareable_preview_service.proto

package services

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ShareablePreviewServiceClient is the client API for ShareablePreviewService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ShareablePreviewServiceClient interface {
	// Returns the requested Shareable Preview.
	GenerateShareablePreviews(ctx context.Context, in *GenerateShareablePreviewsRequest, opts ...grpc.CallOption) (*GenerateShareablePreviewsResponse, error)
}

type shareablePreviewServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewShareablePreviewServiceClient(cc grpc.ClientConnInterface) ShareablePreviewServiceClient {
	return &shareablePreviewServiceClient{cc}
}

func (c *shareablePreviewServiceClient) GenerateShareablePreviews(ctx context.Context, in *GenerateShareablePreviewsRequest, opts ...grpc.CallOption) (*GenerateShareablePreviewsResponse, error) {
	out := new(GenerateShareablePreviewsResponse)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v18.services.ShareablePreviewService/GenerateShareablePreviews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShareablePreviewServiceServer is the server API for ShareablePreviewService service.
// All implementations must embed UnimplementedShareablePreviewServiceServer
// for forward compatibility
type ShareablePreviewServiceServer interface {
	// Returns the requested Shareable Preview.
	GenerateShareablePreviews(context.Context, *GenerateShareablePreviewsRequest) (*GenerateShareablePreviewsResponse, error)
	mustEmbedUnimplementedShareablePreviewServiceServer()
}

// UnimplementedShareablePreviewServiceServer must be embedded to have forward compatible implementations.
type UnimplementedShareablePreviewServiceServer struct {
}

func (UnimplementedShareablePreviewServiceServer) GenerateShareablePreviews(context.Context, *GenerateShareablePreviewsRequest) (*GenerateShareablePreviewsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateShareablePreviews not implemented")
}
func (UnimplementedShareablePreviewServiceServer) mustEmbedUnimplementedShareablePreviewServiceServer() {
}

// UnsafeShareablePreviewServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ShareablePreviewServiceServer will
// result in compilation errors.
type UnsafeShareablePreviewServiceServer interface {
	mustEmbedUnimplementedShareablePreviewServiceServer()
}

func RegisterShareablePreviewServiceServer(s grpc.ServiceRegistrar, srv ShareablePreviewServiceServer) {
	s.RegisterService(&ShareablePreviewService_ServiceDesc, srv)
}

func _ShareablePreviewService_GenerateShareablePreviews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateShareablePreviewsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShareablePreviewServiceServer).GenerateShareablePreviews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v18.services.ShareablePreviewService/GenerateShareablePreviews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShareablePreviewServiceServer).GenerateShareablePreviews(ctx, req.(*GenerateShareablePreviewsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ShareablePreviewService_ServiceDesc is the grpc.ServiceDesc for ShareablePreviewService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ShareablePreviewService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v18.services.ShareablePreviewService",
	HandlerType: (*ShareablePreviewServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateShareablePreviews",
			Handler:    _ShareablePreviewService_GenerateShareablePreviews_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/ads/googleads/v18/services/shareable_preview_service.proto",
}
