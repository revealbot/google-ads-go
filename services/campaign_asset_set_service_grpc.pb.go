// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package services

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CampaignAssetSetServiceClient is the client API for CampaignAssetSetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CampaignAssetSetServiceClient interface {
	// Creates, updates or removes campaign asset sets. Operation statuses are
	// returned.
	MutateCampaignAssetSets(ctx context.Context, in *MutateCampaignAssetSetsRequest, opts ...grpc.CallOption) (*MutateCampaignAssetSetsResponse, error)
}

type campaignAssetSetServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCampaignAssetSetServiceClient(cc grpc.ClientConnInterface) CampaignAssetSetServiceClient {
	return &campaignAssetSetServiceClient{cc}
}

func (c *campaignAssetSetServiceClient) MutateCampaignAssetSets(ctx context.Context, in *MutateCampaignAssetSetsRequest, opts ...grpc.CallOption) (*MutateCampaignAssetSetsResponse, error) {
	out := new(MutateCampaignAssetSetsResponse)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v9.services.CampaignAssetSetService/MutateCampaignAssetSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CampaignAssetSetServiceServer is the server API for CampaignAssetSetService service.
// All implementations must embed UnimplementedCampaignAssetSetServiceServer
// for forward compatibility
type CampaignAssetSetServiceServer interface {
	// Creates, updates or removes campaign asset sets. Operation statuses are
	// returned.
	MutateCampaignAssetSets(context.Context, *MutateCampaignAssetSetsRequest) (*MutateCampaignAssetSetsResponse, error)
	mustEmbedUnimplementedCampaignAssetSetServiceServer()
}

// UnimplementedCampaignAssetSetServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCampaignAssetSetServiceServer struct {
}

func (UnimplementedCampaignAssetSetServiceServer) MutateCampaignAssetSets(context.Context, *MutateCampaignAssetSetsRequest) (*MutateCampaignAssetSetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MutateCampaignAssetSets not implemented")
}
func (UnimplementedCampaignAssetSetServiceServer) mustEmbedUnimplementedCampaignAssetSetServiceServer() {
}

// UnsafeCampaignAssetSetServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CampaignAssetSetServiceServer will
// result in compilation errors.
type UnsafeCampaignAssetSetServiceServer interface {
	mustEmbedUnimplementedCampaignAssetSetServiceServer()
}

func RegisterCampaignAssetSetServiceServer(s grpc.ServiceRegistrar, srv CampaignAssetSetServiceServer) {
	s.RegisterService(&CampaignAssetSetService_ServiceDesc, srv)
}

func _CampaignAssetSetService_MutateCampaignAssetSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MutateCampaignAssetSetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignAssetSetServiceServer).MutateCampaignAssetSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v9.services.CampaignAssetSetService/MutateCampaignAssetSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignAssetSetServiceServer).MutateCampaignAssetSets(ctx, req.(*MutateCampaignAssetSetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CampaignAssetSetService_ServiceDesc is the grpc.ServiceDesc for CampaignAssetSetService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CampaignAssetSetService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v9.services.CampaignAssetSetService",
	HandlerType: (*CampaignAssetSetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MutateCampaignAssetSets",
			Handler:    _CampaignAssetSetService_MutateCampaignAssetSets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/ads/googleads/v9/services/campaign_asset_set_service.proto",
}
