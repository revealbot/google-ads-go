// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: google/ads/googleads/v18/services/content_creator_insights_service.proto

package services

import (
	common "github.com/revealbot/google-ads-go/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for [ContentCreatorInsightsService.GenerateCreatorInsights]
type GenerateCreatorInsightsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the customer.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Required. The name of the customer being planned for.  This is a
	// user-defined value.
	CustomerInsightsGroup string `protobuf:"bytes,2,opt,name=customer_insights_group,json=customerInsightsGroup,proto3" json:"customer_insights_group,omitempty"`
	// A criteria used to search for creators and creator insights.
	//
	// Types that are assignable to Criteria:
	//
	//	*GenerateCreatorInsightsRequest_SearchAttributes_
	//	*GenerateCreatorInsightsRequest_SearchChannels
	Criteria isGenerateCreatorInsightsRequest_Criteria `protobuf_oneof:"criteria"`
}

func (x *GenerateCreatorInsightsRequest) Reset() {
	*x = GenerateCreatorInsightsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_content_creator_insights_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateCreatorInsightsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateCreatorInsightsRequest) ProtoMessage() {}

func (x *GenerateCreatorInsightsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_content_creator_insights_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateCreatorInsightsRequest.ProtoReflect.Descriptor instead.
func (*GenerateCreatorInsightsRequest) Descriptor() ([]byte, []int) {
	return file_services_content_creator_insights_service_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateCreatorInsightsRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *GenerateCreatorInsightsRequest) GetCustomerInsightsGroup() string {
	if x != nil {
		return x.CustomerInsightsGroup
	}
	return ""
}

func (m *GenerateCreatorInsightsRequest) GetCriteria() isGenerateCreatorInsightsRequest_Criteria {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (x *GenerateCreatorInsightsRequest) GetSearchAttributes() *GenerateCreatorInsightsRequest_SearchAttributes {
	if x, ok := x.GetCriteria().(*GenerateCreatorInsightsRequest_SearchAttributes_); ok {
		return x.SearchAttributes
	}
	return nil
}

func (x *GenerateCreatorInsightsRequest) GetSearchChannels() *GenerateCreatorInsightsRequest_YouTubeChannels {
	if x, ok := x.GetCriteria().(*GenerateCreatorInsightsRequest_SearchChannels); ok {
		return x.SearchChannels
	}
	return nil
}

type isGenerateCreatorInsightsRequest_Criteria interface {
	isGenerateCreatorInsightsRequest_Criteria()
}

type GenerateCreatorInsightsRequest_SearchAttributes_ struct {
	// The list of attributes to search for top creators in.
	SearchAttributes *GenerateCreatorInsightsRequest_SearchAttributes `protobuf:"bytes,3,opt,name=search_attributes,json=searchAttributes,proto3,oneof"`
}

type GenerateCreatorInsightsRequest_SearchChannels struct {
	// The list of YouTube Channel IDs to fetch creator insights for.
	SearchChannels *GenerateCreatorInsightsRequest_YouTubeChannels `protobuf:"bytes,4,opt,name=search_channels,json=searchChannels,proto3,oneof"`
}

func (*GenerateCreatorInsightsRequest_SearchAttributes_) isGenerateCreatorInsightsRequest_Criteria() {
}

func (*GenerateCreatorInsightsRequest_SearchChannels) isGenerateCreatorInsightsRequest_Criteria() {}

// Response message for [ContentCreatorInsightsService.GenerateCreatorInsights]
type GenerateCreatorInsightsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A collection of YouTube Creators, each containing a collection of YouTube
	// Channels maintained by the YouTube Creator.
	CreatorInsights []*YouTubeCreatorInsights `protobuf:"bytes,1,rep,name=creator_insights,json=creatorInsights,proto3" json:"creator_insights,omitempty"`
}

func (x *GenerateCreatorInsightsResponse) Reset() {
	*x = GenerateCreatorInsightsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_content_creator_insights_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateCreatorInsightsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateCreatorInsightsResponse) ProtoMessage() {}

func (x *GenerateCreatorInsightsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_content_creator_insights_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateCreatorInsightsResponse.ProtoReflect.Descriptor instead.
func (*GenerateCreatorInsightsResponse) Descriptor() ([]byte, []int) {
	return file_services_content_creator_insights_service_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateCreatorInsightsResponse) GetCreatorInsights() []*YouTubeCreatorInsights {
	if x != nil {
		return x.CreatorInsights
	}
	return nil
}

// A YouTube creator and the insights for this creator.
type YouTubeCreatorInsights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the creator.
	CreatorName string `protobuf:"bytes,1,opt,name=creator_name,json=creatorName,proto3" json:"creator_name,omitempty"`
	// The list of YouTube Channels
	CreatorChannels []*YouTubeChannelInsights `protobuf:"bytes,2,rep,name=creator_channels,json=creatorChannels,proto3" json:"creator_channels,omitempty"`
}

func (x *YouTubeCreatorInsights) Reset() {
	*x = YouTubeCreatorInsights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_content_creator_insights_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YouTubeCreatorInsights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YouTubeCreatorInsights) ProtoMessage() {}

func (x *YouTubeCreatorInsights) ProtoReflect() protoreflect.Message {
	mi := &file_services_content_creator_insights_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YouTubeCreatorInsights.ProtoReflect.Descriptor instead.
func (*YouTubeCreatorInsights) Descriptor() ([]byte, []int) {
	return file_services_content_creator_insights_service_proto_rawDescGZIP(), []int{2}
}

func (x *YouTubeCreatorInsights) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *YouTubeCreatorInsights) GetCreatorChannels() []*YouTubeChannelInsights {
	if x != nil {
		return x.CreatorChannels
	}
	return nil
}

// YouTube Channel metrics.
type YouTubeMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of subscribers.
	SubscriberCount int64 `protobuf:"varint,1,opt,name=subscriber_count,json=subscriberCount,proto3" json:"subscriber_count,omitempty"`
	// The total number of views.
	ViewsCount int64 `protobuf:"varint,2,opt,name=views_count,json=viewsCount,proto3" json:"views_count,omitempty"`
}

func (x *YouTubeMetrics) Reset() {
	*x = YouTubeMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_content_creator_insights_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YouTubeMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YouTubeMetrics) ProtoMessage() {}

func (x *YouTubeMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_services_content_creator_insights_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YouTubeMetrics.ProtoReflect.Descriptor instead.
func (*YouTubeMetrics) Descriptor() ([]byte, []int) {
	return file_services_content_creator_insights_service_proto_rawDescGZIP(), []int{3}
}

func (x *YouTubeMetrics) GetSubscriberCount() int64 {
	if x != nil {
		return x.SubscriberCount
	}
	return 0
}

func (x *YouTubeMetrics) GetViewsCount() int64 {
	if x != nil {
		return x.ViewsCount
	}
	return 0
}

// YouTube Channel insights, and its metadata (such as channel name and channel
// ID), returned for a creator insights response.
type YouTubeChannelInsights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the YouTube Channel.
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The YouTube Channel ID.
	YoutubeChannel *common.YouTubeChannelInfo `protobuf:"bytes,2,opt,name=youtube_channel,json=youtubeChannel,proto3" json:"youtube_channel,omitempty"`
	// The metrics for a YouTube Channel.
	ChannelMetrics *YouTubeMetrics `protobuf:"bytes,3,opt,name=channel_metrics,json=channelMetrics,proto3" json:"channel_metrics,omitempty"`
	// The types of audiences and demographics associated with a channel's main
	// audience. Audiences and demographics will have a breakdown of subscriber
	// share across dimensions of the same value.
	ChannelAudienceDemographics []*common.AudienceInsightsAttributeMetadata `protobuf:"bytes,4,rep,name=channel_audience_demographics,json=channelAudienceDemographics,proto3" json:"channel_audience_demographics,omitempty"`
	// The attributes associated with the content made by a channel.
	ChannelAttributes []*common.AudienceInsightsAttributeMetadata `protobuf:"bytes,5,rep,name=channel_attributes,json=channelAttributes,proto3" json:"channel_attributes,omitempty"`
	// Metadata string associated with the type of channel.
	ChannelType string `protobuf:"bytes,6,opt,name=channel_type,json=channelType,proto3" json:"channel_type,omitempty"`
}

func (x *YouTubeChannelInsights) Reset() {
	*x = YouTubeChannelInsights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_content_creator_insights_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YouTubeChannelInsights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YouTubeChannelInsights) ProtoMessage() {}

func (x *YouTubeChannelInsights) ProtoReflect() protoreflect.Message {
	mi := &file_services_content_creator_insights_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YouTubeChannelInsights.ProtoReflect.Descriptor instead.
func (*YouTubeChannelInsights) Descriptor() ([]byte, []int) {
	return file_services_content_creator_insights_service_proto_rawDescGZIP(), []int{4}
}

func (x *YouTubeChannelInsights) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *YouTubeChannelInsights) GetYoutubeChannel() *common.YouTubeChannelInfo {
	if x != nil {
		return x.YoutubeChannel
	}
	return nil
}

func (x *YouTubeChannelInsights) GetChannelMetrics() *YouTubeMetrics {
	if x != nil {
		return x.ChannelMetrics
	}
	return nil
}

func (x *YouTubeChannelInsights) GetChannelAudienceDemographics() []*common.AudienceInsightsAttributeMetadata {
	if x != nil {
		return x.ChannelAudienceDemographics
	}
	return nil
}

func (x *YouTubeChannelInsights) GetChannelAttributes() []*common.AudienceInsightsAttributeMetadata {
	if x != nil {
		return x.ChannelAttributes
	}
	return nil
}

func (x *YouTubeChannelInsights) GetChannelType() string {
	if x != nil {
		return x.ChannelType
	}
	return ""
}

// The audience attributes (such as Age, Gender, Affinity, and In-Market) and
// creator attributes (such as creator location and creator's content topics)
// used to search for top creators.
type GenerateCreatorInsightsRequest_SearchAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. Audience attributes that describe an audience of viewers. This
	// is used to search for creators whose own viewers match the input
	// audience.
	AudienceAttributes []*common.AudienceInsightsAttribute `protobuf:"bytes,1,rep,name=audience_attributes,json=audienceAttributes,proto3" json:"audience_attributes,omitempty"`
	// Optional. Creator attributes that describe a collection of types of
	// content. This is used to search for creators whose content matches the
	// input creator attributes.
	CreatorAttributes []*common.AudienceInsightsAttribute `protobuf:"bytes,2,rep,name=creator_attributes,json=creatorAttributes,proto3" json:"creator_attributes,omitempty"`
}

func (x *GenerateCreatorInsightsRequest_SearchAttributes) Reset() {
	*x = GenerateCreatorInsightsRequest_SearchAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_content_creator_insights_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateCreatorInsightsRequest_SearchAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateCreatorInsightsRequest_SearchAttributes) ProtoMessage() {}

func (x *GenerateCreatorInsightsRequest_SearchAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_services_content_creator_insights_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateCreatorInsightsRequest_SearchAttributes.ProtoReflect.Descriptor instead.
func (*GenerateCreatorInsightsRequest_SearchAttributes) Descriptor() ([]byte, []int) {
	return file_services_content_creator_insights_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GenerateCreatorInsightsRequest_SearchAttributes) GetAudienceAttributes() []*common.AudienceInsightsAttribute {
	if x != nil {
		return x.AudienceAttributes
	}
	return nil
}

func (x *GenerateCreatorInsightsRequest_SearchAttributes) GetCreatorAttributes() []*common.AudienceInsightsAttribute {
	if x != nil {
		return x.CreatorAttributes
	}
	return nil
}

// A collection of YouTube Channels.
type GenerateCreatorInsightsRequest_YouTubeChannels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. The YouTube Channel IDs to fetch creator insights for.
	YoutubeChannels []*common.YouTubeChannelInfo `protobuf:"bytes,1,rep,name=youtube_channels,json=youtubeChannels,proto3" json:"youtube_channels,omitempty"`
}

func (x *GenerateCreatorInsightsRequest_YouTubeChannels) Reset() {
	*x = GenerateCreatorInsightsRequest_YouTubeChannels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_content_creator_insights_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateCreatorInsightsRequest_YouTubeChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateCreatorInsightsRequest_YouTubeChannels) ProtoMessage() {}

func (x *GenerateCreatorInsightsRequest_YouTubeChannels) ProtoReflect() protoreflect.Message {
	mi := &file_services_content_creator_insights_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateCreatorInsightsRequest_YouTubeChannels.ProtoReflect.Descriptor instead.
func (*GenerateCreatorInsightsRequest_YouTubeChannels) Descriptor() ([]byte, []int) {
	return file_services_content_creator_insights_service_proto_rawDescGZIP(), []int{0, 1}
}

func (x *GenerateCreatorInsightsRequest_YouTubeChannels) GetYoutubeChannels() []*common.YouTubeChannelInfo {
	if x != nil {
		return x.YoutubeChannels
	}
	return nil
}

var File_services_content_creator_insights_service_proto protoreflect.FileDescriptor

var file_services_content_creator_insights_service_proto_rawDesc = []byte{
	0x0a, 0x48, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x38, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x38, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x41, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x38, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61,
	0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x38, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x06, 0x0a, 0x1e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x3b, 0x0a, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x81,
	0x01, 0x0a, 0x11, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e,
	0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x7c, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x59,
	0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x48, 0x00,
	0x52, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x1a, 0xf4, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x70, 0x0a, 0x13, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x73,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x12, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x6e, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x76, 0x0a, 0x0f, 0x59, 0x6f, 0x75, 0x54, 0x75,
	0x62, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x63, 0x0a, 0x10, 0x79, 0x6f,
	0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64,
	0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0f,
	0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x42,
	0x0a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x87, 0x01, 0x0a, 0x1f,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x64, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x38, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x59, 0x6f,
	0x75, 0x54, 0x75, 0x62, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x16, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x64, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x5c, 0x0a, 0x0e, 0x59, 0x6f, 0x75,
	0x54, 0x75, 0x62, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x94, 0x04, 0x0a, 0x16, 0x59, 0x6f, 0x75, 0x54,
	0x75, 0x62, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x5a, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12,
	0x86, 0x01, 0x0a, 0x1d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x61, 0x75, 0x64, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76,
	0x31, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x1b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6d, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x12, 0x71, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64,
	0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x32, 0xcc,
	0x02, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xe3, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x41, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x42, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x22, 0x36, 0x2f, 0x76, 0x31,
	0x38, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x3a, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x1a, 0x45, 0xca, 0x41, 0x18, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0xd2, 0x41, 0x27, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77,
	0x77, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x8e, 0x02,
	0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x38, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x22, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x49, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2f, 0x76, 0x31, 0x38, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x47, 0x41, 0x41, 0xaa, 0x02,
	0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x41, 0x64, 0x73, 0x2e, 0x56, 0x31, 0x38, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0xca, 0x02, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x41, 0x64, 0x73, 0x5c,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x73, 0x5c, 0x56, 0x31, 0x38, 0x5c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0xea, 0x02, 0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a,
	0x3a, 0x41, 0x64, 0x73, 0x3a, 0x3a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x73, 0x3a,
	0x3a, 0x56, 0x31, 0x38, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_content_creator_insights_service_proto_rawDescOnce sync.Once
	file_services_content_creator_insights_service_proto_rawDescData = file_services_content_creator_insights_service_proto_rawDesc
)

func file_services_content_creator_insights_service_proto_rawDescGZIP() []byte {
	file_services_content_creator_insights_service_proto_rawDescOnce.Do(func() {
		file_services_content_creator_insights_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_content_creator_insights_service_proto_rawDescData)
	})
	return file_services_content_creator_insights_service_proto_rawDescData
}

var file_services_content_creator_insights_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_services_content_creator_insights_service_proto_goTypes = []interface{}{
	(*GenerateCreatorInsightsRequest)(nil),                  // 0: google.ads.googleads.v18.services.GenerateCreatorInsightsRequest
	(*GenerateCreatorInsightsResponse)(nil),                 // 1: google.ads.googleads.v18.services.GenerateCreatorInsightsResponse
	(*YouTubeCreatorInsights)(nil),                          // 2: google.ads.googleads.v18.services.YouTubeCreatorInsights
	(*YouTubeMetrics)(nil),                                  // 3: google.ads.googleads.v18.services.YouTubeMetrics
	(*YouTubeChannelInsights)(nil),                          // 4: google.ads.googleads.v18.services.YouTubeChannelInsights
	(*GenerateCreatorInsightsRequest_SearchAttributes)(nil), // 5: google.ads.googleads.v18.services.GenerateCreatorInsightsRequest.SearchAttributes
	(*GenerateCreatorInsightsRequest_YouTubeChannels)(nil),  // 6: google.ads.googleads.v18.services.GenerateCreatorInsightsRequest.YouTubeChannels
	(*common.YouTubeChannelInfo)(nil),                       // 7: google.ads.googleads.v18.common.YouTubeChannelInfo
	(*common.AudienceInsightsAttributeMetadata)(nil),        // 8: google.ads.googleads.v18.common.AudienceInsightsAttributeMetadata
	(*common.AudienceInsightsAttribute)(nil),                // 9: google.ads.googleads.v18.common.AudienceInsightsAttribute
}
var file_services_content_creator_insights_service_proto_depIdxs = []int32{
	5,  // 0: google.ads.googleads.v18.services.GenerateCreatorInsightsRequest.search_attributes:type_name -> google.ads.googleads.v18.services.GenerateCreatorInsightsRequest.SearchAttributes
	6,  // 1: google.ads.googleads.v18.services.GenerateCreatorInsightsRequest.search_channels:type_name -> google.ads.googleads.v18.services.GenerateCreatorInsightsRequest.YouTubeChannels
	2,  // 2: google.ads.googleads.v18.services.GenerateCreatorInsightsResponse.creator_insights:type_name -> google.ads.googleads.v18.services.YouTubeCreatorInsights
	4,  // 3: google.ads.googleads.v18.services.YouTubeCreatorInsights.creator_channels:type_name -> google.ads.googleads.v18.services.YouTubeChannelInsights
	7,  // 4: google.ads.googleads.v18.services.YouTubeChannelInsights.youtube_channel:type_name -> google.ads.googleads.v18.common.YouTubeChannelInfo
	3,  // 5: google.ads.googleads.v18.services.YouTubeChannelInsights.channel_metrics:type_name -> google.ads.googleads.v18.services.YouTubeMetrics
	8,  // 6: google.ads.googleads.v18.services.YouTubeChannelInsights.channel_audience_demographics:type_name -> google.ads.googleads.v18.common.AudienceInsightsAttributeMetadata
	8,  // 7: google.ads.googleads.v18.services.YouTubeChannelInsights.channel_attributes:type_name -> google.ads.googleads.v18.common.AudienceInsightsAttributeMetadata
	9,  // 8: google.ads.googleads.v18.services.GenerateCreatorInsightsRequest.SearchAttributes.audience_attributes:type_name -> google.ads.googleads.v18.common.AudienceInsightsAttribute
	9,  // 9: google.ads.googleads.v18.services.GenerateCreatorInsightsRequest.SearchAttributes.creator_attributes:type_name -> google.ads.googleads.v18.common.AudienceInsightsAttribute
	7,  // 10: google.ads.googleads.v18.services.GenerateCreatorInsightsRequest.YouTubeChannels.youtube_channels:type_name -> google.ads.googleads.v18.common.YouTubeChannelInfo
	0,  // 11: google.ads.googleads.v18.services.ContentCreatorInsightsService.GenerateCreatorInsights:input_type -> google.ads.googleads.v18.services.GenerateCreatorInsightsRequest
	1,  // 12: google.ads.googleads.v18.services.ContentCreatorInsightsService.GenerateCreatorInsights:output_type -> google.ads.googleads.v18.services.GenerateCreatorInsightsResponse
	12, // [12:13] is the sub-list for method output_type
	11, // [11:12] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_services_content_creator_insights_service_proto_init() }
func file_services_content_creator_insights_service_proto_init() {
	if File_services_content_creator_insights_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_content_creator_insights_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateCreatorInsightsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_content_creator_insights_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateCreatorInsightsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_content_creator_insights_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YouTubeCreatorInsights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_content_creator_insights_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YouTubeMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_content_creator_insights_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YouTubeChannelInsights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_content_creator_insights_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateCreatorInsightsRequest_SearchAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_content_creator_insights_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateCreatorInsightsRequest_YouTubeChannels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_content_creator_insights_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GenerateCreatorInsightsRequest_SearchAttributes_)(nil),
		(*GenerateCreatorInsightsRequest_SearchChannels)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_content_creator_insights_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_content_creator_insights_service_proto_goTypes,
		DependencyIndexes: file_services_content_creator_insights_service_proto_depIdxs,
		MessageInfos:      file_services_content_creator_insights_service_proto_msgTypes,
	}.Build()
	File_services_content_creator_insights_service_proto = out.File
	file_services_content_creator_insights_service_proto_rawDesc = nil
	file_services_content_creator_insights_service_proto_goTypes = nil
	file_services_content_creator_insights_service_proto_depIdxs = nil
}
